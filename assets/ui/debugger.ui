(gui "gui-debugger"
    (namespace! :debugger)
    (state! ".debug-mode" :continue)
    (state! ".memory" (repeat "@i" 256 0))
    (state! ".memory-changed" #f)
    (state! ".memory-modified" ())
    (state! ".breakpoints" ())
    (state! ".breakpoints-changed" #f)

    (state! ".r0" 0)
    (state! ".r1" 0)
    (state! ".r2" 0)
    (state! ".r3" 0)
    (state! ".r0-changed" #f)
    (state! ".r1-changed" #f)
    (state! ".r2-changed" #f)
    (state! ".r3-changed" #f)
    (state! ".r0-modified" #f)
    (state! ".r1-modified" #f)
    (state! ".r2-modified" #f)
    (state! ".r3-modified" #f)

    (state! ".flags" 0)
    (state! ".flags-changed" #f)
    (state! ".flags-modified" #f)

    (state! ".overflow-flag" (quote (< 0 (and .flags 8))))
    (state! ".sign-flag" (quote (< 0 (and .flags 4))))
    (state! ".carry-flag" (quote (< 0 (and .flags 2))))
    (state! ".zero-flag" (quote (< 0 (and .flags 1))))
    (state! ".overflow-flag-modified" #f)
    (state! ".sign-flag-modified" #f)
    (state! ".carry-flag-modified" #f)
    (state! ".zero-flag-modified" #f)

    (state! ".pc" 0)
    (state! ".pc-changed" #f)
    (state! ".pc-modified" #f)

    (state! ".ports" ())
    (state! ".ports-changed" #f)

    (state! ".background-colour" (206 23 35))
    (state! ".text-colour" (215 147 143))
    (state! ".text-change-colour" (255 94 94))
    (state! ".highlight-read-breakpoint-colour" (147 207 153))
    (state! ".highlight-write-breakpoint-colour" (147 173 207))
    (state! ".highlight-breakpoint-colour" (207 147 194))
    (state! ".highlight-instruction-colour" (255 255 255))
    (state! ".button-focus-colour" (quote .highlight-instruction-colour))
    (state! ".button-fill-colour" (quote .background-colour))

    (state! ".font" (
        ; (font "Andale Mono")
        ; (thickness: 0.45)
        ; (space: 0)
        ; (scale: -0.712 -0.712)

        (font "Courier New")
        (thickness: 0.5)
        (space: 0)
        (scale: -0.712 -0.712)
    ))

    (state! ".palette" "basic/red")
    (eval (cat (@cd "assets/palettes/" .palette "/debugger.blob")))

    (children:
        (gui-rect
            (.colour! (quote .background-colour))

            (children:
                (gui-debugger-register
                    (.rect! (quote (+ (super .x) (max (- (super .width) 370) (/ (super .width) 2)))) (quote (+ (super .y) (/ (super .height) 2) (/ (super .height) 4))) (quote (- (/ (super .width) 2) 20)) (quote (- (/ (super .height) 4) 10)))
                    (.colour! (quote .text-colour))
                    (.change-colour! (quote .text-change-colour))
                    (.text-alignment! :left)
                )
                (gui-debugger-port
                    (.rect! (quote (+ (super .x) (max (- (super .width) 370) (/ (super .width) 2)))) (quote (+ (super .y) (/ (super .height) 2))) (quote (- (/ (super .width) 2) 20)) (quote (- (/ (super .height) 4) 10)))
                    (.colour! (quote .text-colour))
                    (.change-colour! (quote .text-change-colour))
                    (.text-alignment! :left)
                )
                (gui-debugger-memory
                    (.rect! (quote (+ (super .x) (/ (super .width) 2))) (quote (super .y)) (quote (- (/ (super .width) 2) 20)) (quote (/ (super .height) 2)))
                    (.colour! (quote .text-colour))
                    (.change-colour! (quote .text-change-colour))
                    (.read-breakpoint-colour! (quote .highlight-read-breakpoint-colour))
                    (.write-breakpoint-colour! (quote .highlight-write-breakpoint-colour))
                    (.breakpoint-colour! (quote .highlight-breakpoint-colour))
                    (.instruction-colour! (quote .highlight-instruction-colour))
                    (.text-alignment! :right)
                )
                (gui-debugger-disassembly
                    (.rect! (quote (+ (super .x) 20)) (quote (+ (super .y) 80)) (quote (- (/ (super .width) 2) 20)) (quote (- (super .height) 90)))
                    (.colour! (quote .text-colour))
                    (.change-colour! (quote .text-change-colour))
                    (.read-breakpoint-colour! (quote .highlight-read-breakpoint-colour))
                    (.write-breakpoint-colour! (quote .highlight-write-breakpoint-colour))
                    (.breakpoint-colour! (quote .highlight-breakpoint-colour))
                    (.instruction-colour! (quote .highlight-instruction-colour))
                    (.text-alignment! :left)
                )
                (gui-debugger-control
                    (.rect! (quote (+ (super .x) 20)) (quote (+ (super .y) 20)) (quote (- (/ (super .width) 2) 20)) 40)
                    (.colour! (quote .button-fill-colour))
                    (.secondary-colour! (quote .button-focus-colour))
                )
                (gui-rect ;TODO: Add a post-render callback
                    (.rect! 0 0 0 0)
                    (render:
                        (.breakpoints-changed! #f)
                        (.r0-changed! #f)
                        (.r1-changed! #f)
                        (.r2-changed! #f)
                        (.r3-changed! #f)
                        (.flags-changed! #f)
                        (.pc-changed! #f)
                        (.ports-changed! #f)
                        (.memory-changed! #f)
                    )
                )
            )
        )
    )
)
