(gui "gui-debugger-control"
    (namespace! :debugger-control)
    (state! ".colour" (0 0 0))
    (state! ".secondary-colour" (255 255 255))

    (children:
        (gui-toggle
            (state! ".continue-symbol" (quote ()) (invalidate: (frame-changed?))) ;draw play symbol (.colour)
            (state! ".pause-symbol" (quote (
                (render-rect ((+ .x 12) (+ .y 12) 6 (- .height 24)) .secondary-colour)
                (render-rect ((+ .x 12 6 4) (+ .y 12) 6 (- .height 24)) .secondary-colour)
            )) (invalidate: (quote (frame-changed?))))

            (.rect! (quote (super .x)) (quote (super .y)) 40 40)
            (.colour! (quote (super .colour)))
            (.label! (quote (
                (quote (
                    (render-rect .rect .colour (outline: 4 .secondary-colour))
                    .pause-symbol
                ))
                (quote (
                    (render-rect .rect .colour (outline: 4 .secondary-colour))
                    .continue-symbol
                ))
                (quote (
                    (render-rect .rect (lighten .colour 5) (outline: 4 .secondary-colour))
                    (if .active .continue-symbol .pause-symbol)
                ))
                (quote (
                    (render-rect .rect (darken .colour 5) (outline: 4 .secondary-colour))
                    (if .active .continue-symbol .pause-symbol)
                ))
            )))

            (.off-click! (quote (message (component-router :debugger) :debug-continue)))
            (.on-click! (quote (message (component-router :debugger) :debug-pause)))

            (render: (.active! (= .debug-mode :pause)))
        )
        (gui-button
            (state! ".step-instruction-symbol" (quote (
                (render-rect ((+ .x 12 6 4 5) (+ .y 7) 6 6) .secondary-colour)
                (render-rect ((+ .x 12 6 4 5) (+ .y 17) 6 6) .secondary-colour)
                (render-rect ((+ .x 12 6 4 5) (+ .y 27) 6 6) .secondary-colour)
                (render-rect ((+ .x 12) (+ .y 20) 6 13) .secondary-colour)
                ;draw triangle pointing down
            )) (invalidate: (quote (frame-changed?))))

            (.rect! (quote (+ (super .x) 40 20)) (quote (super .y)) 40 40)
            (.colour! (quote (super .colour)))
            (.label! (quote (
                ;TODO: design step
                (quote (
                    (render-rect .rect .colour (outline: 4 .secondary-colour))
                    .step-instruction-symbol
                ))
                (quote (
                    (render-rect .rect (lighten .colour 5) (outline: 4 .secondary-colour))
                    .step-instruction-symbol
                ))
                (quote (
                    (render-rect .rect (darken .colour 5) (outline: 4 .secondary-colour))
                    .step-instruction-symbol
                ))
            )))

            (.on-click! (quote (message (component-router :debugger) :debug-step)))
        )
    )
)
