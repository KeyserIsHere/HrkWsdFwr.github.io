.port notifier, 0
.port in, 1
.port out, 2
.port switch, 3

.define active, 1
.define read_attempts, 64

.entrypoint
    mov r3, out
    mov r2, data
    mov r1, read_attempts
    xor r0, active
    jnz read
wait_read:
    recv r0, [r0]
    jz wait_read
    mov r0, in
read:
    sub r1, 1
    jz notify
    recv r0, [r2]
    jz read
    add r2, 1
    jmp read
wait_send:
    xor r0, r0
    recv r0, [r0]
    jz wait_send
notify_read:
    send r0
    jz notify_read
    mov r0, in
send:
    send r3, r0, [r1 + data]
    add r1, 1
    cmp r1, r2
    jnz send
    mov r0, switch
notify_switch:
    send r0
    jz notify_switch
    xor r0, r0
notify_send:
    send r0
    jz notify_send
    xor r2, r2
    mov r1, read_attempts
    jmp wait_read
data:
