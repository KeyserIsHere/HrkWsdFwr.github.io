# HTP4 Packet Decoder
# Decodes HTP4 (4-Bit Hashed Transfer Protocol) packets and forwards the
# decoded data to the next device.
#
# This is intended to be a standalone program that runs indefinitely.
# -----------------------------------Ports-----------------------------------
# Port(0): in:
# Is the port that passes HTP4 packets to this program. It expects to receive
# only 1 byte at a time. The byte can be any HTP4 packet.
#
# Port(1): out:
# Is the port this program will send the decoded data to. It will send the
# full block of data with the structure:
#
#     0 1 2 3 4 5 6 7
#    +-+-+-+-+-+-+-+-+
#    | Size| Unused  |
#    +-+-+-+-+-+-+-+-+
#    |     Data ...
#    +-+-+-+-+-+-+-+-+
#
#   Size: 3 bits
#     The size of the data
#
#   Unused: 5 bits
#     The 5 high bits that were passed in with the length
#
#   Data: 1 to 7 bytes
#     The decoded data (of length Size)
# ----------------------------------Details----------------------------------
# The program can keep track of 5 unique HTP4 packet sequences at any given
# time. If there is not enough room for the new packet sequence, it will
# either purge an older one, or it will discard the incoming one.
#

.define data_bitsize, 4
.define packet_data_mask, 0xf #0xff >> (8 - data_bitsize)
.define hash_max, 0xf #~packet_data_mask >> data_bitsize

.include htp_decoder
