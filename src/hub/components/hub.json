{
    "functions": [
        {
            "name": "hub",
            "description": "Create a processor hub component.",
            "examples": ["(hub\n\t(name: \"test\")\n\t(program: \"file.s\")\n)"],
            "return": { "type": "custom:component" },
            "options": [
                {
                    "name": "name",
                    "description": "The name of the processor hub.",
                    "args": [[{ "type": "string" }]]
                },
                {
                    "name": "program",
                    "description": "The program source.",
                    "args": [[{ "type": "string", "name": "file" }]]
                }
            ]
        },
        {
            "name": "keyboard-module",
            "description": "Create a keyboard module component.",
            "examples": ["(keyboard-module)"],
            "return": { "type": "custom:component" }
        },
        {
            "name": "display-module",
            "description": "Create a display module component.",
            "examples": ["(display-module (resolution: 16 16) (encoding: :direct))"],
            "return": { "type": "custom:component" },
            "options": [
                {
                    "name": "resolution",
                    "description": "The size of the display. Must be 256 pixels big.",
                    "args": [
                        [{ "type": "integer", "name": "width" }, { "type": "integer", "name": "height" }],
                        [{ "type": "list", "name": "resolution", "value": [{ "type": "integer", "name": "width" }, { "type": "integer", "name": "height" }] }]
                    ]
                },
                {
                    "name": "encoding",
                    "description": "The colour encoding type of the display.",
                    "args": [
                        [{ "type": "atom", "name": "encoding" }],
                        [{ "type": "atom", "value": "uniform" }],
                        [{ "type": "atom", "value": "direct" }],
                        [{ "type": "atom", "value": "gradient" }],
                        [{ "type": "atom", "value": "yuv" }]
                    ]
                }
            ]
        }
    ]
}
